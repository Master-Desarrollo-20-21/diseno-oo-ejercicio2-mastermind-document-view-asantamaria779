@startuml
class Game as "mastermind.models.Game"{}
class ProposedCombination as "mastermind.models.ProposedCombination"{}
class SecretCombination as "mastermind.models.SecretCombination"{}
class Result as "mastermind.models.Result"{}
class YesNoDialog as "utils.YesNoDialog"{}

class mastermind.views.View {
	+View(Game game)
	+void interact()
}

class mastermind.views.WithGameView {
	#Game game
	~WithGameView(Game)
}

class mastermind.views.ProposedCombinationView {
	+ProposedCombinationView()
	+ProposedCombination read()
	+void show(ProposedCombination)
}

class mastermind.views.ResumeView {
	~ResumeView(Game)
	+boolean interact()
}

class mastermind.views.SecretCombinationView {
	+void show()
}

class mastermind.views.ResultView {
	+void show(Result)
}

class mastermind.views.ErrorView {
	~ErrorView(Error)
	+void writeln(String)
	+void writeln()
}

class mastermind.views.PlayView {
	~PlayView(Game)
	+void interact()
}

class mastermind.views.ConsoleView {
	#Console console
	~ConsoleView()
}
class mastermind.views.GameView {
	~GameView(Game)
	+void show()
}

class mastermind.views.StartView {
	~StartView(Game)
	+void interact()
}
enum mastermind.views.Message {
	TITTLE
	RESUME
	PLAYER_WIN
	PLAYER_LOST
	NUMBER_ATTEMPTS
	PROPOSE_COMBINATION
	RESULT
	message
	-Message(String)
	+String getMessage(int)
	+String getMessage(int,int)
	+String getMessage()
}

enum mastermind.views.Error  {
	WRONG_LENGTH_COMBINATION
	WRONG_COLORS_COMBINATION
	NULL
	message
	~Error()
	~Error(String message)
	+String getMessage()
	+boolean isNull()
}

mastermind.views.View *-down-> mastermind.views.StartView
mastermind.views.View *-down-> mastermind.views.PlayView
mastermind.views.View *-down-> mastermind.views.ResumeView
mastermind.views.ErrorView -down-> mastermind.views.Error
mastermind.views.PlayView *--down-> mastermind.views.GameView
mastermind.views.PlayView *--down-> mastermind.views.ProposedCombinationView
mastermind.views.GameView *-down-> mastermind.views.ResultView
mastermind.views.GameView *-down-> mastermind.views.SecretCombinationView
mastermind.views.WithGameView <|-down- mastermind.views.GameView
mastermind.views.WithGameView <|-down- mastermind.views.StartView
mastermind.views.WithGameView <|-down- mastermind.views.ResumeView
mastermind.views.WithGameView <|-down- mastermind.views.PlayView
mastermind.views.ConsoleView <|-down- mastermind.views.ResultView
mastermind.views.ConsoleView <|-down- mastermind.views.WithGameView
mastermind.views.ConsoleView <|-down- mastermind.views.ProposedCombinationView
mastermind.views.ConsoleView <|-down- mastermind.views.SecretCombinationView
mastermind.views.ConsoleView <|-down- mastermind.views.ErrorView
mastermind.views.StartView ..> mastermind.views.Message
mastermind.views.ProposedCombinationView ..> mastermind.views.Message
mastermind.views.ResumeView ..> mastermind.views.Message
mastermind.views.GameView ..> mastermind.views.Message
mastermind.views.PlayView ..> mastermind.views.Message
mastermind.views.ResultView ..> mastermind.views.Message

mastermind.views.StartView --> Game
mastermind.views.GameView -left-> Game
mastermind.views.PlayView --> Game
mastermind.views.ResumeView --> Game
mastermind.views.View --> Game
mastermind.views.WithGameView --> Game
mastermind.views.ResumeView ..> YesNoDialog
mastermind.views.ResultView ..> Result
mastermind.views.PlayView ..> Result
mastermind.views.PlayView ..> ProposedCombination
mastermind.views.ProposedCombinationView ..> ProposedCombination
mastermind.views.SecretCombinationView .left.> SecretCombination


mastermind.views.View -[hidden]down-> mastermind.views.ConsoleView
@enduml